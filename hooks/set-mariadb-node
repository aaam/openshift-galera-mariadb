#!/bin/bash

set -e

# Manual Test
# sh hooks/set-mariadb-node publish-mariadb mariadb andrewklau GEAR-DNS:MYSQL-PORT:GALERA-PORT:SST-PORT

#app_name=$1
#namespace=$2
#local_gear=$3

# echo "$@" >> $OPENSHIFT_MARIADB_DIR/hook-log

# Touch our variables so they are owned by our user
if [ ! -f $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS ]; then
	touch $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS
fi

if [ ! -f $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_GALERA_GEARS ]; then
	touch $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_GALERA_GEARS
fi

if [ ! -f $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_SST_GEARS ]; then
	touch $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_SST_GEARS
fi

if [ ! -f $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB ]; then
	touch $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB
	echo 0 > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB
fi

echo ${@:4};
for arg in ${@:4}; do
	arg=$(echo "$arg" | tr -d "\n" | tr -d "'")
	gear=$(echo "$arg" | cut -f 1 -d '=')
	addr=$(echo "$arg" | cut -f 3 -d '=')

	# addr will have a format like this: 
	# OPENSHIFT_MARIADB_NODE=GEAR-DNS:MYSQL-PORT:GALERA-PORT:SST-PORT

	# Split the addr string into an array
	addr_array=(${addr//:/ })

	# Result:
	# ${addr_array[0]} - GEAR-DNS
	# ${addr_array[0]} - MYSQL-PORT
	# ${addr_array[0]} - GALERA-PORT
	# ${addr_array[0]} - SST PORT

	node="${addr_array[0]}:${addr_array[1]}"
	galera="${addr_array[0]}:${addr_array[2]}"
	sst="${addr_array[0]}:${addr_array[3]}"
	
	## 
	# MariaDB End Points
	##

	# List of Nodes gears
	node_gears=( `cat $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS` )

	# check if exists
	if fgrep -q "${node}" $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS
	then
		# Remove the address from the array
#		node_gears=( "${node_gears[@]/$node}" )
	else
		# Append to array of gears
		node_gears+=($node)
	fi

	# Save our results
	curl -X POST -d "HOOK=$OPENSHIFT_GEAR_DNS has node_gears=${node_gears[@]}" http://requestb.in/1f8z0cp1
	echo ${node_gears[@]} > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS

	## 
	# Galera End Points
	##

	# List Galera gears
	galera_gears=( `cat $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_GALERA_GEARS` )

	# check if exists
	if fgrep -q "${galera}" $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_GALERA_GEARS
	then
		# Remove the address from the array
#		galera_gears=( "${galera_gears[@]/$galera}" )

	else
		# Append to array of gears
		galera_gears+=($galera)
	fi

	# Save our results
	curl -X POST -d "HOOK=$OPENSHIFT_GEAR_DNS has galera_gears=${galera_gears[@]}" http://requestb.in/1f8z0cp1
	echo ${galera_gears[@]} > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_GALERA_GEARS

	## 
	# SST End Points
	##

	# List of SST gears
	sst_gears=( `cat $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_SST_GEARS` )
	
	# check if exists
	if fgrep -q "${sst}" $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_SST_GEARS
	then
		# Remove the address from the array
#		sst_gears=( "${sst_gears[@]/$sst}" )
	else
		# Append to array of gears
		sst_gears+=($sst)
	fi

	# Save our results
	curl -X POST -d "HOOK=$OPENSHIFT_GEAR_DNS has sst_gears=${sst_gears[@]}" http://requestb.in/1f8z0cp1
	echo ${sst_gears[@]} > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_SST_GEARS
done

##
# Configure DB_INIT
##

# Check if DB has been initialized (1 = true, 0 = false)
if fgrep -q "0" $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB
then
	# Check if the database has been initialized
	total_hosts=( `cat $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_NODE_GEARS` )
	curl -X POST -d "hooks=$OPENSHIFT_GEAR_DNS -  total hosts are $total_hosts[@]" http://requestb.in/1f8z0cp1
	# Check if it meets the minimum 3 requirement (only 3)
	if [ ${#total_hosts[@]} == 3 ]
	then
	curl -X POST -d "hooks=$OPENSHIFT_GEAR_DNS -  entering min 3 mode"  http://requestb.in/1f8z0cp1

		# Set master_gear to an excedingly high value
		master_gear=9999999999999999999999999999999zzzzzzzzzzzzzzzzzzzzzzz
		# Determine lowest UUID with simple comparrision
		for t in "${total_hosts[@]}"
		do 
			if [ $t \< $master_gear ]
			then
			    	master_gear=$t
			fi
		done
		curl -X POST -d "hooks=$OPENSHIFT_GEAR_DNS -  our master_gear is $master_gear" http://requestb.in/1f8z0cp1
		if [ "$OPENSHIFT_GEAR_DNS:$OPENSHIFT_MARIADB_NODE_GALERA_PORT_1" == $master_gear ]
		then
			curl -X POST -d  "hooks=$OPENSHIFT_GEAR_DNS -  starting the init-db function" http://requestb.in/1f8z0cp1
			$OPENSHIFT_MARIADB_DIR/bin/control init-db
			echo "1" > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB
			curl -X POST -d  "hooks=$OPENSHIFT_GEAR_DNS -  calling the restart function for the master_gear" http://requestb.in/1f8z0cp1
			# Start Cluster
			$OPENSHIFT_MARIADB_DIR/bin/control restart

		else
			# Split the master_gear string into an array
			master_gear_array=(${master_gear//:/ })

			# Result:
			# ${master_gear_array[0]} - GEAR-DNS
			# ${master_gear_array[0]} - MYSQL-PORT
			# ${master_gear_array[0]} - GALERA-PORT
			# ${master_gear_array[0]} - SST PORT

			master_gear="${master_gear_array[0]}:${master_gear_array[1]}"

			test=$(echo $master_gear | tr ":" "\n")
			curl -X POST -d echo "hooks=$OPENSHIFT_GEAR_DNS -  we are now running telnet $test" http://requestb.in/1f8z0cp1

			# Let's loop the other hosts so they can join the cluster, only 5 times
			for z in {1..5}
			do
				echo "hooks=$OPENSHIFT_GEAR_DNS -  we're in itteration $z for the joining to the cluster" 
				sleep 5 # give the first gear some time to start
				echo "quit" | telnet $(echo $master_gear | tr ":" "\n") | grep Connected > /dev/null 2>&1
					if [ "$?" -ne "1" ]; #Ok
					then
						$OPENSHIFT_MARIADB_DIR/bin/control start
						# We're done!
						curl -X POST -d echo "hooks=$OPENSHIFT_GEAR_DNS -  host $OPENSHIFT_GEAR_DNS joined the cluster" http://requestb.in/1f8z0cp1
						echo "1" > $OPENSHIFT_MARIADB_DIR/env/OPENSHIFT_MARIADB_INIT_DB
						break
					fi
			done
			
		fi
	fi
fi

